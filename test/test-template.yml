Description: >
  Test and reference template for cfn-annex.

Parameters:
  FunctionName:
    Type: String
    Default: cfn-annex
  EnableDebug:
    Type: String
    Default: true
    Description: Enable Lambda logging to CW.

Resources:
  Lowercase:
    Type: Custom::Lowercase
    Properties:
      ServiceToken:
        Fn::ImportValue: 
            !Sub ${FunctionName}
      fn: lowercase
      input:
        string: TESTING
      debug: EnableDebug

  Uppercase:
    Type: Custom::Uppercase
    Properties:
      ServiceToken:
        Fn::ImportValue: 
          !Sub ${FunctionName}
      fn: uppercase
      input:
        string: testing
      debug: EnableDebug

  Split:
    Type: Custom::Split
    Properties:
      ServiceToken:
        Fn::ImportValue: 
          !Sub ${FunctionName}
      fn: split
      input:
        string: ab-c--def-g-
        delimiter: '-'
      debug: EnableDebug

  RemoveSingleChar:
    Type: Custom::RemoveSingleChar
    Properties:
      ServiceToken:
        Fn::ImportValue: 
          !Sub ${FunctionName}
      fn: remove
      input:
        string: ab-c--def-g-
        remove: '-'
      debug: EnableDebug

  RemoveMultiChars:
    Type: Custom::RemoveMultiChars
    Properties:
      ServiceToken:
        Fn::ImportValue: 
          !Sub ${FunctionName}
      fn: remove
      input:
        string: ab-c--def-g-
        remove:
          - '-'
          - 'd'
          - 'a'
      debug: EnableDebug

  RandomChars:
    Type: Custom::RandomChars
    Properties:
      ServiceToken:
        Fn::ImportValue: 
          !Sub ${FunctionName}
      fn: random
      input:
        length: 10
      debug: EnableDebug

  Pause:
    Type: Custom::Pause
    Properties:
      ServiceToken:
        Fn::ImportValue: 
          !Sub ${FunctionName}
      fn: pause
      input:
        duration: 20000
      debug: EnableDebug

  DescribeCall:
    Type: Custom::Describe
    Properties:
      ServiceToken:
        Fn::ImportValue: 
          !Sub ${FunctionName}
      fn: describe
      input:
        describe: CloudFormation.describeStackResource #will perform a CFN describeStackResource API call
        params:
          StackName: !Ref AWS::StackName
          LogicalResourceId: DescribeCall
        responseKey: ResourceType
      debug: EnableDebug



  ## Example of using the describe call and specifying a full path to the return value.
  ## Uncomment resource and specify an AMI Id to test.

  # GetRootSnapshotIdFromAMI:
  #   Type: Custom::Describe
  #   Properties:
  #     ServiceToken:
  #       Fn::ImportValue: 
  #         !Sub ${FunctionName}
  #     fn: describe
  #     input:
  #       describe: EC2.describeImages #will perform an EC2 describeImages API call
  #       params:
  #         ImageIds: 
  #           - <AMI Id>
  #       responseKey: Images.0.BlockDeviceMappings.0.Ebs.SnapshotId # .0. is used to access the first element in the array
  #       # Because there is only 1 volume attached, we could just specify 'SnapshotId', without the full path. It will return the fist found.
  #     debug: EnableDebug



  ## Example of tagging an instance root volume.
  ## Uncomment resources and specify an AMI id to test.

  # MyEC2Instance: 
  #   Type: AWS::EC2::Instance
  #   Properties: 
  #     ImageId: <AMI Id>
  #     InstanceType: t2.large
  #     BlockDeviceMappings: 
  #       - DeviceName: "/dev/sdm"
  #         Ebs: 
  #           VolumeType: "io1"
  #           Iops: "200"
  #           DeleteOnTermination: "false"
  #           VolumeSize: "20"
  #       - DeviceName: "/dev/sdk"
  #         Ebs:
  #           VolumeType: "io1"
  #           Iops: "200"
  #           VolumeSize: "20"

  # TagInstaceRootVol:
  #   Type: Custom::Tag
  #   Properties:
  #     ServiceToken:
  #       Fn::ImportValue: 
  #         !Sub ${FunctionName}
  #     fn: tag
  #     input:
  #       tags: 
  #         - Key: cfnAnnex
  #           Value: testValue
  #       resource: !Ref MyEC2Instance
  #     debug: EnableDebug



  ## Example ASG using cfn-annex to tag instance root volumes.
  ## Uncomment resources and specify the latest Amazon Linux AMI and an instance profile to test.

  # ASG:
  #   Type: AWS::AutoScaling::AutoScalingGroup
  #   Properties:
  #     AvailabilityZones:
  #       Fn::GetAZs: 
  #         Ref: "AWS::Region"
  #     LaunchConfigurationName: 
  #       Ref: LaunchConfiguration
  #     MaxSize: 1
  #     MinSize: 1

  # LaunchConfiguration:
  #   Type: AWS::AutoScaling::LaunchConfiguration
  #   Properties: 
  #     ImageId: <Amazon Linux AMI>
  #     InstanceType: t2.large
  #     IamInstanceProfile: <arn of instance profile>
  #     BlockDeviceMappings: 
  #       - DeviceName: "/dev/sdm"
  #         Ebs: 
  #           VolumeType: "io1"
  #           Iops: "200"
  #           DeleteOnTermination: "false"
  #           VolumeSize: "20"
  #       - DeviceName: "/dev/sdk"
  #         Ebs:
  #           VolumeType: "io1"
  #           Iops: "200"
  #           VolumeSize: "20"
  #     UserData:
  #       Fn::Base64:
  #         !Sub
  #         - | 
  #           #!/bin/bash -xe
  #           yum install aws-cli
  #           INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id)
  #           aws lambda invoke --region ${AWS::Region} --function-name ${Function} --invocation-type Event --payload "{ \"ResourceProperties\": { \"fn\": \"tag\", \"input\": { \"resource\": \"${!INSTANCE_ID}\", \"tags\": [ { \"Key\": \"myKeyName\", \"Value\": \"myKeyValue\" } ] } } }" outputfile
  #         - { Function: !ImportValue cfn-annex }

Outputs:
  Lowercase:
    Description: Value returned from Custom::Lowercase
    Value: !GetAtt Lowercase.response
    Export:
      Name: cfn-annex-lowercase-test
  
  Uppercase:
    Description: Value returned from Custom::Uppercase
    Value: !GetAtt Uppercase.response
    Export:
      Name: cfn-annex-uppercase-test

  Split:
    Description: Value returned from Custom::Split (list joined back with the '+' char, as output must be a string)
    Value: 
      Fn::Join:
        - +
        - !GetAtt Split.response
    Export:
      Name: cfn-annex-split-test

  RemoveSingleChar:
    Description: Value returned from Custom::RemoveSingleChar
    Value: !GetAtt RemoveSingleChar.response
    Export: 
      Name: cfn-annex-removesinglechar-test

  RemoveMultiChars:
    Description: Value returned from Custom::RemoveMultiChars
    Value: !GetAtt RemoveMultiChars.response
    Export:
      Name: cfn-annex-removemultichars-test

  RandomChars:
    Description: Value returned from Custom::RandomChars
    Value: !GetAtt RandomChars.response
    Export:
      Name: cfn-annex-randomchars-test

  Pause:
    Description: Value returned from Custom::Pause
    Value: !GetAtt Pause.response
    Export:
      Name: cfn-annex-pause-test

  DescribeCall:
    Description: Value returned from Custom::Describe (DescribeCall)
    Value: !GetAtt DescribeCall.response
    Export:
      Name: cfn-annex-describecall-test

  GetRootSnapshotIdFromAMI:
    Description: Value returned from Custom::Describe (GetRootSnapshotIdFromAMI)
    Value: !GetAtt GetRootSnapshotIdFromAMI.response
    Export:
      Name: cfn-annex-getrootsnapshotfromid-test